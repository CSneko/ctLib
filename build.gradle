import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar
buildscript {
    repositories {
        gradlePluginPortal()
    }
    dependencies {
        classpath 'com.github.johnrengelman:shadow:8.1.1'
    }
}


plugins {
    id 'fabric-loom' version '1.2-SNAPSHOT'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'java'
}

apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'java'

version = project.mod_version
group = project.maven_group

repositories {
    // Add repositories to retrieve artifacts from in here.
    // You should only use this when depending on other mods because
    // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
    // See https://docs.gradle.org/current/userguide/declaring_repositories.html
    // for more information about repositories.
    maven {
        name = 'Spigot'
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
    }
    maven { url = 'https://oss.sonatype.org/content/groups/public/' }

}
shadowJar {
    // 配置生成的 JAR 文件名称
    archiveFileName = "ctLib-${version}.jar"

    // 配置包含哪些依赖项
    dependencies {
        include(dependency("javax.servlet:javax.servlet-api:3.1.0"))
        include(dependency("org.eclipse.jetty:jetty-server:9.4.46.v20220331"))
        include(dependency("mysql:mysql-connector-java:8.0.26"))
        include(dependency("com.sun.mail:javax.mail:1.6.2"))
        include(dependency("javax.activation:activation:1.1.1"))
        include(dependency("com.fasterxml.jackson.core:jackson-databind:2.15.2"))
        include(dependency("com.fasterxml.jackson.core:jackson-core:2.12.5"))
        include(dependency("com.fasterxml.jackson.core:jackson-annotations:2.12.5"))
        include(dependency("com.google.protobuf:protobuf-java:3.18.1"))
        include(dependency("commons-codec:commons-codec:1.15"))
        include(dependency("org.xerial:sqlite-jdbc:3.34.0"))


    }
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    compileOnly 'org.spigotmc:spigot-api:1.20.1-R0.1-SNAPSHOT'
    implementation 'javax.servlet:javax.servlet-api:3.1.0'
    implementation 'org.eclipse.jetty:jetty-server:9.4.46.v20220331'
    implementation 'mysql:mysql-connector-java:8.0.26'
    implementation 'com.sun.mail:javax.mail:1.6.2'
    implementation 'javax.activation:activation:1.1.1'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.12.5'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.5'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.12.5'
    implementation 'com.google.protobuf:protobuf-java:3.18.1'
    implementation 'commons-codec:commons-codec:1.15'
    implementation 'org.xerial:sqlite-jdbc:3.34.0'


}

processResources {
    inputs.property "version", project.version
    inputs.property "minecraft_version", project.minecraft_version
    inputs.property "loader_version", project.loader_version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version,
                "minecraft_version": project.minecraft_version,
                "loader_version": project.loader_version
    }
}

def targetJavaVersion = 17
tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release = targetJavaVersion
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    archivesBaseName = project.archives_base_name
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}
